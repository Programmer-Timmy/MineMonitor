name: Publish Docker Image

on:
  push:
    branches: [main]
    tags:
      - 'v*'   # matches tags like v1.2.3, v2.0.0, etc.

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set owner and repo variables
        id: meta
        run: |
          echo "OWNER=$(echo '${GITHUB_REPOSITORY%%/*}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO=$(echo '${GITHUB_REPOSITORY##*/}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Determine tags and image names
        id: tags
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION_TAG="${GITHUB_REF#refs/tags/}"
            IMAGE_TAG="ghcr.io/$OWNER/$REPO:$VERSION_TAG"
            LATEST_TAG="ghcr.io/$OWNER/$REPO:latest"
            echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
            echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
            echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            RANDOM_ID=$(head /dev/urandom | tr -dc a-z0-9 | head -c 8)
            IMAGE_TAG="ghcr.io/$OWNER/$REPO:beta-$RANDOM_ID"
            BETA_TAG="ghcr.io/$OWNER/$REPO:beta"
            echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
            echo "beta_tag=$BETA_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ${{ steps.tags.outputs.image_tag }}

      - name: Push Docker image(s)
        run: |
          docker push ${{ steps.tags.outputs.image_tag }}

          # If beta tag present, push floating beta tag too
          if [ -n "${{ steps.tags.outputs.beta_tag }}" ]; then
            docker tag ${{ steps.tags.outputs.image_tag }} ${{ steps.tags.outputs.beta_tag }}
            docker push ${{ steps.tags.outputs.beta_tag }}
          fi

      - name: Update VERSION file and push (for releases)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{ steps.tags.outputs.version_tag }}" > VERSION
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add VERSION
          git commit -m "Update VERSION to ${{ steps.tags.outputs.version_tag }}" || echo "No changes to commit"
          git push

      - name: Update BETA_VERSION file and push (for beta builds)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ steps.tags.outputs.image_tag }}" > BETA_VERSION
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add BETA_VERSION
          git commit -m "Update BETA_VERSION to ${{ steps.tags.outputs.image_tag }}" || echo "No changes to commit"
          git push
